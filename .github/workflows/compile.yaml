name: Compile
on:
  push:
    branches:
      - main
jobs:
  compile:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - { file: "main.typ", output: "paper.pdf", artifact: "Paper" }
          - { file: "poster/main.typ", output: "poster.pdf", artifact: "Poster" }
          - { file: "presentation/main.typ", output: "presentation.pdf", artifact: "Presentation slides", args: "--input HANDOUT=true --input POSTER_PATH=\"\"" }
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Cache Nix store
        uses: actions/cache@v4
        with:
          path: |
            ~/.nix-profile
            /nix/store
          key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix') }}
          restore-keys: |
            nix-${{ runner.os }}-
      - run: nix profile install nixpkgs#nerd-fonts.iosevka-term-slab
      - uses: typst-community/setup-typst@v4
      - run: typst fonts
      - run: typst compile --root . ${{ matrix.target.args || '' }} ${{ matrix.target.file }} ${{ matrix.target.output }}
      - name: Publish PDF
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target.artifact }}
          path: ${{ matrix.target.output }}

  create-release:
    needs: compile
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Get current date
        id: date
        run: echo "tag=$(date +'%Y-%m-%d')" >> "$GITHUB_OUTPUT"

      - run: ls -R .
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.date.outputs.tag }}
          name: Release ${{ steps.date.outputs.tag }}
          files: artifacts/*.pdf
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
